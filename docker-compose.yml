version: '3.7'
services:
  proxy:
    container_name: proxy
    image: nginx
    restart: always
    ports:
      - 0.0.0.0:80:80
      - 0.0.0.0:443:443
    volumes:
      - .volumes/nginx/config:/etc/nginx/conf.d
      - .volumes/nginx/auth:/etc/apache2
  redis:
    container_name: kekBackend-redis
    image: redis:6-alpine
    restart: always
    command: [ "redis-server", "--appendonly", "yes" ]
    ports:
      - 0.0.0.0:6379:6379
      - 0.0.0.0:6380:6380
    volumes:
      - .volumes/redis:/data
  postgres:
    container_name: kekBackend-postgres
    image: postgres:13-alpine
    restart: always
    environment:
      - POSTGRES_USER=kekBackend
      - POSTGRES_DB=kek
      - POSTGRES_PASSWORD=password
    ports:
      - 0.0.0.0:5432:5432
    volumes:
      - .volumes/postgresql:/var/lib/postgresql/data
  kekBackend:
    container_name: kekBackend
    image: kekDAO/kekBackend:latest
    restart: always
    depends_on:
      - redis
      - postgres
    ports:
      - 127.0.0.1:3001:3001
      - 127.0.0.1:3000:3000
    environment:
      - PG_PASSWORD=password
    volumes:
      - .volumes/kekBackend:/config
  kekBackend-test:
    container_name: kekBackend-test
    image: kekDAO/kekBackend:latest
    restart: always
    depends_on:
      - redis
      - postgres
    ports:
      - 127.0.0.1:3003:3003
      - 127.0.0.1:3002:3002
    environment:
      - PG_PASSWORD=password
    volumes:
      - .volumes/kekBackend-test:/config
